AWSTemplateFormatVersion: '2010-09-09'

Description: 'VPC Security Group resources used by the Lambdas managed via AWS SAM (e.g. acces too OpenSearch, RDS, etc.)'

# NOTE: Lambda's deployed into a VPC are given ENIs in the SecurityGroup defined below. The way that AWS cleans up
#       these ENIs is slow (in excess of 45 minutes), so be patient when trying to delete the this stack or any
#       of the associated Lambda's stacks! See: https://stackoverflow.com/questions/47957820/lambda-in-vpc-deletion-takes-more-time

Parameters:
  Env:
    Type: 'String'
    Default: 'dev'

  VpcId:
    Type: 'AWS::EC2::VPC::Id'

  Subnets:
    Type: 'List<AWS::EC2::Subnet::Id>'

Resources:
  # ---------------------------------------------------------------------------------
  # EC2 Security Groups for Lambdas that need to communicate VPC protected resources
  #   See: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
  # ---------------------------------------------------------------------------------
  LambdaSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub '${AWS::StackName} Lambda Security Group'
      GroupName: !Sub '${AWS::StackName}-sec-grp'
      VpcId: !Ref VpcId

  EventBridgeVpcEndpointSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: !Sub "${AWS::StackName} SecGrp to allow Lambdas to write to EventBridge"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: !GetAtt LambdaSecurityGroup.GroupId

  # ---------------------------------------------------------------------------------
  # VPC Endpoint that allows Lambdas that operate within the VPC to communicate with EventBridge
  #   See: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html
  # ---------------------------------------------------------------------------------
  EventBridgeVpcEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref EventBridgeVpcEndpointSecurityGroup
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.events'
      SubnetIds: !Ref Subnets
      VpcEndpointType: 'Interface'
      VpcId: !Ref VpcId

Outputs:
  LambdaSecurityGroupId:
    Value: !GetAtt LambdaSecurityGroup.GroupId
    Export:
      Name: !Sub '${Env}-LambdaSecurityGroupId'

  EventBridgeVpcEndpointSecurityGroupId:
    Value: !GetAtt EventBridgeVpcEndpointSecurityGroup.GroupId
    Export:
      Name: !Sub '${Env}-EventBridgeVpcEndpointSecurityGroupId'

  EventBridgeVpcEndpointId:
    Value: !Ref EventBridgeVpcEndpoint
    Export:
      Name: !Sub '${Env}-EventBridgeVpcEndpointId'
