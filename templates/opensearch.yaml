AWSTemplateFormatVersion: '2010-09-09'

Transform: 'AWS::SecretsManager-2020-07-23'

Description: 'OpenSearch related resources'

# NOTE: You should ensure that any related Lambda stacks from the ./src/lambdas/indexers directory have been
#       successfully deleted prior to deleting this stack!
#       The SecurityGroup defined below will have ENIs defined for those Lambdas and the deletion of this stack
#       will hang indefinetly until the Lambdas are deleted and their ENIs are cleaned up.
#
#       If you do get stuck, you can speed this process up by detaching and deleting the ENIs manually in the
#       console, but you have to wait until their status becomes 'Available'
#       See: https://stackoverflow.com/questions/47957820/lambda-in-vpc-deletion-takes-more-time

Parameters:
  VpcId:
    Type: 'AWS::EC2::VPC::Id'

  SubnetA:
    Type: 'AWS::EC2::Subnet::Id'

  SubnetB:
    Type: 'AWS::EC2::Subnet::Id'

  SubnetC:
    Type: 'AWS::EC2::Subnet::Id'

  DomainName:
    Type: 'String'

  Env:
    Type: 'String'
    Default: 'dev'

  SsmPath:
    Type: 'String'

  OSLogsDomainId:
    Type: 'String'

  OSLogsDomainEndpoint:
    Type: 'String'

  LogRetentionDays:
    Type: 'Number'
    Default: 14

Resources:
  # ----------------------------------------------
  # SSM Parameter Store
  #   See: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ssm-parameter.html
  # ----------------------------------------------
  OSLogsDomainIdParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Description: !Sub "${AWS::StackName} OpenSearch Domain Id"
      Name: !Sub "${SsmPath}OSLogsDomainId"
      Type: 'String'
      Value: !Sub "https://${OSLogsDomainId}"

  OSLogsDomainEndpointParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Description: !Sub "${AWS::StackName} OpenSearch Domain URL"
      Name: !Sub "${SsmPath}OSLogsDomainEndpoint"
      Type: 'String'
      Value: !Sub "https://${OSLogsDomainEndpoint}"

  # Adding a few here so that they can be pulled in to SAM build/deploy
  DomainNameParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Description: !Sub "${AWS::StackName} Domain Name"
      Name: !Sub "${SsmPath}DomainName"
      Type: 'String'
      Value: !Ref DomainName

  SubnetAParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Description: !Sub "${AWS::StackName} Subnet 1"
      Name: !Sub "${SsmPath}SubnetA"
      Type: 'String'
      Value: !Ref SubnetA

  SubnetBParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Description: !Sub "${AWS::StackName} Subnet 2"
      Name: !Sub "${SsmPath}SubnetB"
      Type: 'String'
      Value: !Ref SubnetB

  SubnetCParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Description: !Sub "${AWS::StackName} Subnet 3"
      Name: !Sub "${SsmPath}SubnetC"
      Type: 'String'
      Value: !Ref SubnetC

  # --------------------------------------------------------
  # CloudWatch LogGroups
  #   See:
  # --------------------------------------------------------
  OpenSearchLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub "${AWS::StackName}-opensearch-app"
      RetentionInDays: !Ref LogRetentionDays

  # --------------------------------------------------------
  # IAM Policies
  #   See:
  # --------------------------------------------------------
  OpenSearchLogPolicy:
    Type: 'AWS::Logs::ResourcePolicy'
    Properties:
      PolicyName: !Sub 'DmpHub${Env}OSAppLog'
      PolicyDocument: !Sub '{"Version": "2012-10-17","Statement": {"Effect": "Allow", "Principal": { "Service": "es.amazonaws.com" }, "Action": ["logs:PutLogEvents", "logs:CreateLogStream"], "Resource": ["${OpenSearchLogGroup.Arn}"]}}'

  # -----------------------------------------------------------
  # EC2 Security Groups for ECS containers (see their definitions in application.yaml)
  #   See: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
  # -----------------------------------------------------------
  OpensearchSecGrp:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub 'OpenSearch security group for ${AWS::StackName}'
      GroupName: !Sub '${AWS::StackName}-sec-grp'
      VpcId: !Ref VpcId

  OpensearchSecGrpIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      Description: 'Ingress rules for ${AWS::StackName} sec-grp'
      IpProtocol: 'tcp'
      CidrIp: 0.0.0.0/0
      FromPort: 443
      ToPort: 443
      GroupId: !Ref OpensearchSecGrp

  # --------------------------------------------------------
  # OpenSearch Domain for DMP search functionality
  #   See: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opensearchservice-domain.html
  # --------------------------------------------------------
  OpenSearchDomain:
    Type: 'AWS::OpenSearchService::Domain'
    DependsOn:
      - OpenSearchLogPolicy
    Properties:
      ClusterConfig:
        DedicatedMasterEnabled: false
        InstanceCount: 1 #3
        InstanceType: 't3.small.search'
        MultiAZWithStandbyEnabled: false
        ZoneAwarenessEnabled: false #true
        # ZoneAwarenessConfig:
        #   AvailabilityZoneCount: 3
      DomainEndpointOptions:
        EnforceHTTPS: true
        TLSSecurityPolicy: 'Policy-Min-TLS-1-2-PFS-2023-10'
      EBSOptions:
        EBSEnabled: true
        VolumeSize: 10
        VolumeType: 'gp2'
      EncryptionAtRestOptions:
        Enabled: true
      EngineVersion: 'OpenSearch_2.11'
      LogPublishingOptions:
        'ES_APPLICATION_LOGS':
          Enabled: true
          CloudWatchLogsLogGroupArn: !GetAtt OpenSearchLogGroup.Arn
      NodeToNodeEncryptionOptions:
        Enabled: true
      SoftwareUpdateOptions:
        AutoSoftwareUpdateEnabled: true
      VPCOptions:
        SecurityGroupIds:
          - !Ref OpensearchSecGrp
        SubnetIds:
          - !Ref SubnetA
          - !Ref SubnetB
          - !Ref SubnetC

Outputs:
  OpenSearchDomainId:
    Value: !Ref OpenSearchDomain

  OpenSearchSecurityGroupId:
    Value: !GetAtt OpensearchSecGrp.GroupId
    Export:
      Name: !Sub '${Env}-OpenSearchSecurityGroupId'

  OpenSearchHostedZoneId:
    Value: !GetAtt OpensearchSecGrp.GroupId

  OpenSearchDomainArn:
    Value: !GetAtt OpenSearchDomain.Arn
    Export:
      Name: !Sub '${Env}-OpenSearchDomainArn'

  OpenSearchDomainEndpoint:
    Value: !GetAtt OpenSearchDomain.DomainEndpoint
    Export:
      Name: !Sub '${Env}-OpenSearchDomainEndpoint'

  OpenSearchApplicationLogGroupArn:
    Value: !GetAtt OpenSearchLogGroup.Arn
