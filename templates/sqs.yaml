AWSTemplateFormatVersion: '2010-09-09'

Description: 'Builds out an SQS queue used to email sys admin and trigger some lambdas'

Parameters:
  Env:
    Type: 'String'
    Default: 'dev'

  SsmPath:
    Type: 'String'

  AdminEmail:
    Type: 'String'

  MessageRetentionSeconds:
    Type: 'Number'
    Default: 7200 # 2 hours

  DeadLetterRetentionSeconds:
    Type: 'Number'
    Default: 7200 # 2 hours

  DelaySeconds:
    Type: 'Number'
    Default: 5

  MaxReceiveCount:
    Type: 'Number'
    Default: 5

Resources:
  # ----------------------------------------------
  # Simple Queue Service (SQS). Some Lambdas write to the queue and others watch for messages
  #   See: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html
  # ----------------------------------------------
  DeadLetterQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      MessageRetentionPeriod: !Ref DeadLetterRetentionSeconds

  SqsQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      # MaximumMessageSize: 128000 # bytes == 128 KB
      MessageRetentionPeriod: !Ref MessageRetentionSeconds
      DelaySeconds: !Ref DelaySeconds # Delay to allow Lambda to scale if necessary
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DeadLetterQueue.Arn
        maxReceiveCount: !Ref MaxReceiveCount

  # Add the Queue ARN and URL to SSM so that our Lambdas can access it
  SqsQueueArnParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Description: !Sub "${AWS::StackName} SQS Queue ARN"
      Name: !Sub "${SsmPath}SqsQueueArn"
      # Note: AWS CloudFormation does not yet support creating a SecureString parameter type.
      Type: 'String'
      Value: !GetAtt SqsQueue.Arn

  SqsQueueUrlParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Description: !Sub "${AWS::StackName} SQS Queue URL"
      Name: !Sub "${SsmPath}SqsQueueUrl"
      # Note: AWS CloudFormation does not yet support creating a SecureString parameter type.
      Type: 'String'
      Value: !GetAtt SqsQueue.QueueUrl

  # ----------------------------------------------
  # Simple Notification Service (SNS) topics
  #   See: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sqs-queue.html
  # ----------------------------------------------
  SnsTopicEmail:
    Type: 'AWS::SNS::Topic'
    Properties:
      # ContentBasedDeduplication: true
      DisplayName: 'DmpHubEmail'
      Subscription:
        - Protocol: 'sqs'
          Endpoint: !GetAtt SqsQueue.Arn

  # Add the Topic name to SSM so that our Lambdas can access it
  SnsTopicEmailParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Description: !Sub "${AWS::StackName} Email Topic"
      Name: !Sub "${SsmPath}SnsFatalErrorTopicArn"
      # Note: AWS CloudFormation does not yet support creating a SecureString parameter type.
      Type: 'String'
      Value: !Ref SnsTopicEmail

  # You can only give one email address at a time. If you want to send a message to
  # multiple users, you have to create multiple subscriptions
  #
  # Note that the AdminEmail address will receive a confirmation email from AWS that
  # must be manually confirmed!
  ErrorEmailSubscription:
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !Ref AdminEmail
      Protocol: 'email'
      TopicArn: !Ref SnsTopicEmail

Outputs:
  DeadLetterQueueId:
    Value: !Ref DeadLetterQueue

  DeadLetterQueueArn:
    Value: !GetAtt DeadLetterQueue.Arn
    Export:
      Name: !Sub '${Env}-DeadLetterQueueArn'

  SqsQueueId:
    Value: !Ref SqsQueue

  SqsQueueArn:
    Value: !GetAtt SqsQueue.Arn

  SnsTopicEmailArn:
    Value: !Ref SnsTopicEmail
    Export:
      Name: !Sub '${Env}-SnsTopicEmailArn'

  SnsTopicEmailName:
    Value: !GetAtt SnsTopicEmail.TopicName
