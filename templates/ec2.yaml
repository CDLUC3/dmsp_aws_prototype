AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Description: 'This EC2 instance is meant for temporary use to access RDS directly (e.g. seeding the DB)'

Parameters:
  VpcId:
    Type: 'AWS::EC2::VPC::Id'

  SubnetId:
    Type: 'AWS::EC2::Subnet::Id'

Resources:
  # -----------------------------------------------------------
  # EC2 Security Groups for ECS containers (see their definitions in application.yaml)
  #   See: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-security-group.html
  # -----------------------------------------------------------
  Ec2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub 'EC2 (temp instance) security group for ${AWS::StackName}'
      GroupName: !Sub '${AWS::StackName}-sec'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  Ec2KeyPair:
    Type: 'AWS::EC2::KeyPair'
    Properties:
      KeyName: !Sub "${AWS::StackName}-ec2-key"
      KeyType: 'rsa'

  Ec2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: 't2.micro'
      # ImageId: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64'
      ImageId: 'ami-kernel-6.1-x86_64'
      KeyName: !Ref Ec2KeyPair
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          GroupSet:
            - !Ref Ec2SecurityGroup
          SubnetId: !Ref SubnetId

Outputs:
  Ec2SecurityGroupId:
    Value: !GetAtt Ec2SecurityGroup.GroupId

  Ec2Key:
    Value: !GetAtt Ec2KeyPair.KeyFingerprint

  Ec2InstanceId:
    Value: !Ref Ec2Instance
  Ec2PrivateInstanceName:
    Value: !GetAtt Ec2Instance.PrivateDnsName
  Ec2PrivateInstanceIp:
    Value: !GetAtt Ec2Instance.PrivateIp
  Ec2PublicInstanceName:
    Value: !GetAtt Ec2Instance.PublicDnsName
  Ec2PublicInstanceIp:
    Value: !GetAtt Ec2Instance.PublicIp
