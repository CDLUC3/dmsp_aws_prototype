{
  "openapi": "3.0.0",

  "info": {
    "version": "0.1.0",
    "title": "DMPTool v3 API specification",
    "description": "Please use the interface below to test the features of the DMPTool API.<br><br>Please note that the lock icon next to an endpoint indicates that you must provide an access token.<br>To acquire an access token, click on the green 'Authorize' button and enter your API credentials along with the scope(s) you have access to.<br><br>If you do not have credentials for the API, you can test any of the endpoints that do not display a lock icon.<br>If you would like API credentials, please contact us via the link below.",
    "contact": {
      "name": "DMPTool Support",
      "email": "dmptool@ucop.edu",
      "url": "https://dmptool.org/contact-us"
    },
    "license": {
      "name": "MIT License",
      "url": "https://spdx.org/licenses/MIT.html"
    }
  },

  "externalDocs": {
    "description": "Overview documentation of the API and DMP metadata",
    "url": "https://github.com/CDLUC3/dmp-hub-cfn/wiki/API-Overview"
  },

  "components": {
    "responses": {
      "Forbidden": {
        "description": "Invalid access token"
      },
      "IllegalInput": {
        "description": "Invalid arguments"
      },
      "NotFound": {
        "description": "DMP not found"
      },
      "Success": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/StandardResponse"
            }
          }
        }
      },
      "GeneralError": {
        "description": "Server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/StandardError"
            }
          }
        }
      }
    },

    "securitySchemes": {
      "Authorizer": {
        "type": "oauth2",
        "description": "OAuth2 Client Credentials",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth.dmphub-dev.cdlib.org/oauth2/token",
            "scopes": {
              "https://auth.dmphub-dev.cdlib.org/dev.delete": "Tombstone a DMP",
              "https://auth.dmphub-dev.cdlib.org/dev.read": "Read or modify a DMP",
              "https://auth.dmphub-dev.cdlib.org/dev.upload": "Create or modify a DMP",
              "https://auth.dmphub-dev.cdlib.org/dev.write": "Create or modify a DMP"
            }
          }
        }
      }
    },

    "parameters": {
      "pageParam": {
        "name": "page",
        "in": "query",
        "description": "the current page",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "perPageParam": {
        "name": "per_page",
        "in": "query",
        "description": "the current number of items per page (max 100, default 25)",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "searchParam": {
        "name": "search",
        "in": "query",
        "description": "the search term",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    },

    "schemas": {
      "StandardError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },

      "DmpResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32",
            "description": "The status code (e.g. 200, 201, 404, etc.)"
          },
          "requested": {
            "type": "string",
            "description": "The path that was called (e.g. '/dmps/10.12345/ABC123')"
          },
          "requested_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO 8601 date and time the request was processed (e.g. 2023-02-08T18:49:45621UTC)"
          },
          "total_items": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of returnable items (regardless of current pagination settings)"
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "description": "The current page"
          },
          "per_page": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items per page (min - 1, max - 250, default - 25)"
          },
          "items": {
            "type": "array",
            "description": "The DMPs",
            "items": {
              "$ref": "#/components/schemas/Dmp"
            }
          },
          "errors": {
            "type": "array",
            "description": "Error messages",
            "items": {
              "type": "string",
              "description": "An error message",
              "example": "You are not authorized to perform this action"
            }
          }
        },
        "required": ["status", "requested", "requested_at", "page", "per_page", "total_items"]
      },

      "UserResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32",
            "description": "The status code (e.g. 200, 201, 404, etc.)"
          },
          "requested": {
            "type": "string",
            "description": "The path that was called (e.g. '/dmps/10.12345/ABC123')"
          },
          "requested_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO 8601 date and time the request was processed (e.g. 2023-02-08T18:49:45621UTC)"
          },
          "total_items": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of returnable items (regardless of current pagination settings)"
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "description": "The current page"
          },
          "per_page": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items per page (min - 1, max - 250, default - 25)"
          },
          "items": {
            "type": "array",
            "description": "The user",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "errors": {
            "type": "array",
            "description": "Error messages",
            "items": {
              "type": "string",
              "description": "An error message",
              "example": "You are not authorized to perform this action"
            }
          }
        },
        "required": ["status", "requested", "requested_at", "page", "per_page", "total_items"]
      },

      "FunderResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32",
            "description": "The status code (e.g. 200, 201, 404, etc.)"
          },
          "requested": {
            "type": "string",
            "description": "The path that was called (e.g. '/dmps/10.12345/ABC123')"
          },
          "requested_at": {
            "type": "string",
            "format": "date-time",
            "description": "The ISO 8601 date and time the request was processed (e.g. 2023-02-08T18:49:45621UTC)"
          },
          "total_items": {
            "type": "integer",
            "format": "int32",
            "description": "The total number of returnable items (regardless of current pagination settings)"
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "description": "The current page"
          },
          "per_page": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items per page (min - 1, max - 250, default - 25)"
          },
          "items": {
            "type": "array",
            "description": "The user",
            "items": {
              "$ref": "#/components/schemas/Funder"
            }
          },
          "errors": {
            "type": "array",
            "description": "Error messages",
            "items": {
              "type": "string",
              "description": "An error message",
              "example": "You are not authorized to perform this action"
            }
          }
        },
        "required": ["status", "requested", "requested_at", "page", "per_page", "total_items"]
      },

      "Dmp": {},

      "User": {
        "type": "object",
        "title": "A DMPTool user",
        "properties": {
          "affiliation": {
            "type": "object",
            "title": "The user's affiliation",
            "properties": {
              "affiliation_id": {
                "type": "object",
                "title": "The unique ID of the affiliation",
                "description": "The affiliation's ROR",
                "properties": {
                  "identifier": {
                    "type": "string",
                    "title": "The affiliation ID",
                    "example": "https://ror.org/03yrm5c26"
                  },
                  "type":{
                    "type": "string",
                    "enum": ["doi", "ror", "url"],
                    "title":" The affiliation ID type schema",
                    "description": "Identifier type. Allowed values: doi, ror, url",
                    "example": "ror"
                  }
                },
                "required": ["identifier", "type"]
              },
              "name": {
                "type": "string",
                "title": "Name of the institution/organization",
                "description": "Official institution/organization name",
                "example": "Example University"
              }
            }
          },
          "mbox": {
            "type": "string",
            "format": "email",
            "title": "The Mailbox Schema",
            "description": "User's E-mail address",
            "example": "cc@example.com"
          },
          "name": {
            "type": "string",
            "title": "The Name Schema",
            "description": "Name of the user as Last, First (e.g. 'Doe PhD., Jane A.' or 'Doe, Jane')",
            "example": "Doe, Jane"
          },
          "user_id": {
            "type": "object",
            "title": "The User ID Schema",
            "properties": {
              "identifier": {
                "type": "string",
                "title": "The User Identifier Schema",
                "example": "https://orcid.org/0000-0003-0644-4174"
              },
              "type": {
                "type": "string",
                "enum": ["orcid", "isni", "openid", "other"],
                "title": "The User Identifier Type Schema",
                "description": "Identifier type. Allowed values: orcid, isni, openid, other",
                "example": "orcid"
              }
            },
            "required": ["identifier", "type"]
          }
        },
        "required": ["user_id", "mbox", "name", "affiliation"]
      },

      "Funder": {
        "type": "object",
        "title": "A Funder institution",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the institution",
            "example": "University of Exampleland"
          },
          "funder_id": {
            "type": "object",
            "description": "A unique identifier for the funder",
            "properties": {
              "identifier": {
                "type": "string",
                "description": "The value of the identifier",
                "example": "https://ror.org/zzz000z"
              },
              "type": {
                "type": "string",
                "enum": ["fundref", "other"],
                "description": "Identifier type. Allowed values: fundref, other",
                "example": "fundref"
              }
            },
            "required": ["identifier", "type"]
          },
          "funder_api": {
            "type": "string",
            "description": "The AJAX target for the funder's API. Can be used to back a search field on an HTML form",
            "example": "https://api.example.com/funders/0000000000/api"
          },
          "funder_api_label": {
            "type": "string",
            "description": "The label to display on the HTML form for a field using the funder's API",
            "example": "Research Project"
          },
          "funder_api_guidance": {
            "type": "string",
            "description": "Text to help the user understand what the the HTML form expects for input for the field using the funder's API",
            "example": "Please enter your research project title"
          },
          "required": ["name", "funder_id"]
        }
      }
    }
  },

  "paths": {
    "/funders": {
      "servers": [
        {
          "description": "DMPHub development instance",
          "url": "https://api.dmphub-dev.cdlib.org"
        }
      ],
      "get": {
        "tags": [
          "UI support operations"
        ],
        "operationId": "GetFunders",
        "description": "Performs a search for funders whose name/alias match the search term",
        "parameters": [
          { "$ref": "#/components/parameters/searchParam" },
          { "$ref": "#/components/parameters/pageParam" },
          { "$ref": "#/components/parameters/perPageParam" }
        ],
        "security": [
          {
            "Authorizer": [
              "https://auth.dmphub-dev.cdlib.org/dev.read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "The Funder's name, acronym, alias, or homepage url",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunderResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        }
      }
    },
    "/me": {
      "servers": [
        {
          "description": "DMPHub development instance",
          "url": "https://api.dmphub-dev.cdlib.org"
        }
      ],
      "get": {
        "tags": [
          "UI support operations"
        ],
        "operationId": "GetMe",
        "description": "Fetches the user info for the logged in user.<br><br><strong>Note:</strong> this endpoint currently returns stubbed data.",
        "security": [
          {
            "Authorizer": [
              "https://auth.dmphub-dev.cdlib.org/dev.read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "The user's name, email, affiliation and ORCID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        }
      }
    },
    "/dmps": {
      "servers": [
        {
          "description": "DMPHub development instance",
          "url": "https://api.dmphub-dev.cdlib.org"
        }
      ],
      "post": {
        "tags": [
          "DMP operations"
        ],
        "operationId": "CreateDmp",
        "description": "Create a new DMP record. This will register a new DMP ID.<br><br><strong>NOTE:</strong> The API will use the 'dmp_id' supplied in the request to determine if the DMP metadata already exists! Be sure to change it to something unique if you are using the example.",
        "requestBody": {
          "description": "The DMP metadata",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dmp"
              }
            }
          }
        },
        "security": [
          {
            "Authorizer": [
              "https://auth.dmphub-dev.cdlib.org/dev.write"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "The DMP metadata (including its DMP ID)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DmpResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        }
      }
    },

    "/dmps/validate": {
      "servers": [
        {
          "description": "DMPHub development instance",
          "url": "https://api.dmphub-dev.cdlib.org"
        }
      ],
      "post": {
        "tags": [
          "DMP operations"
        ],
        "operationId": "ValidateDmp",
        "description": "Validate the DMP metadata payload",
        "requestBody": {
          "description": "The DMP metadata to validate",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dmp"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The DMP metadata was valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DmpResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        }
      }
    },

    "/dmps/{dmpId}": {
      "servers": [
        {
          "description": "DMPHub development instance",
          "url": "https://api.dmphub-dev.cdlib.org"
        }
      ],

      "delete": {
        "tags": [
          "DMP operations"
        ],
        "operationId": "TombstoneDmp",
        "description": "Tombstone the DMP ID.<br><br><strong>Note:</strong> This endpoint has not yet been implemented.",
        "parameters": [
          {
            "name": "dmpId",
            "in": "path",
            "description": "The Dmp Id",
            "example": "doi.org/10.12345/ABC123",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Authorizer": [
              "https://auth.dmphub-dev.cdlib.org/dev.write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "The successfully tombstoned DMP (DMPs are not deleted, they become inaccessible)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DmpResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        }
      },

      "get": {
        "tags": [
          "DMP operations"
        ],
        "operationId": "GetDmp",
        "description": "Find the DMP by the DMP ID (e.g. '/dmps/doi.org/10.12345/ABC123' or '/dmps/10.12345/ABC123')",
        "parameters": [
          {
            "name": "dmpId",
            "in": "path",
            "description": "The Dmp Id",
            "example": "doi.org/10.12345/ABC123",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "description": "A specific version of the DMP (returns latest version if left blank). In ISO 8601 date and time format.",
            "in": "query",
            "required": false,
            "allowReserved": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The DMP in a single item array",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DmpResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        }
      },

      "put": {
        "tags": [
          "DMP operations"
        ],
        "operationId": "UpdateDmp",
        "description": "Update the DMP by the DMP ID (e.g. 'doi.org/10.12345/ABC123' or '10.12345/ABC123')",
        "parameters": [
          {
            "name": "dmpId",
            "in": "path",
            "description": "The Dmp Id",
            "example": "doi.org/10.12345/ABC123",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated DMP metadata",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dmp"
              }
            }
          }
        },
        "security": [
          {
            "Authorizer": [
              "https://auth.dmphub-dev.cdlib.org/dev.write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "The successfully updated DMP",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DmpResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        }
      }
    }
  }
}