template:
  path: 'alb.yaml'
  type: 'file'

parameters:
  VpcId: !stack_attr sceptre_user_data.vpc_id
  Subnets: !stack_attr sceptre_user_data.public_subnets

  CertificateArn: !stack_output dev/regional/cert.yaml::CertificateArn
  WafArn: !stack_output dev/regional/waf.yaml::WafArn

  #   See: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-loadbalancer.html
  ElbType: 'application'
  ElbScheme: 'internet-facing'

  # ELB Target Group options
  #   See: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/AWS_ElasticLoadBalancingV2.html
  # The port and protocol the Target Group listens to
  ElbTgPort: '80'
  ElbTgProtocol: 'HTTP'
  ElbTgTargetType: 'ip'
  ElbTgMatcherHttpCode: '200'
  ElbTgSessionStickinessSeconds: '900' # 15 minutes
  ElbTgHealthCheckIntervalSeconds: '300' # 5 minutes
  ElbTgHealthCheckPath: '/'
  ElbTgHealthCheckProtocol: 'HTTP'
  ElbTgHealthCheckTimeoutSeconds: '30'
  # The number of failed checks before we report an issue (so if it checks every 5 minutes this
  # should start alerting after 15 minutes)
  ElbTgHealthCheckThresholdCount: '3'
