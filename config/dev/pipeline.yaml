template:
  path: 'pipeline.yaml.j2'
  type: 'file'

parameters:
  VpcID: !stack_output_external cdl-uc3-dev-vpc-stack::vpc
  Subnets:
    # - !stack_output_external cdl-uc3-dev-privatesubnet-stack::privatesubnet2a
    # - !stack_output_external cdl-uc3-dev-privatesubnet-stack::privatesubnet2b
    # - !stack_output_external cdl-uc3-dev-privatesubnet-stack::privatesubnet2c
    - 'subnet-0b6ce38d6c451c40c'
    - 'subnet-007d03c7b2d5867c9'
    - 'subnet-01df5798fad9d5a9d'

  Environment: !stack_attr sceptre_user_data.env
  AppName: !stack_attr sceptre_user_data.app_name
  DomainName: !stack_attr sceptre_user_data.domain

  CodeStarConnectionArn: !ssm_parameter /uc3/CodeStarConnectionArn
  RubyGemsApiKey: !ssm_parameter /uc3/RubyGemsApiKey

  ECRRepositoryURI: !stack_output dev/data.yaml::ECRRepositoryURI
  ECRRepositoryName: !stack_output dev/data.yaml::ECRRepositoryName

  # Lambda Function IDs and ARNs are pulled into the template directly using CF's ImportValue
  # function because jinja2 does not natively support the inclusion of j2 templates using a
  # relative path. (e.g. '../../templates/includes.js')
  LambdaFunctionStackName: !stack_output dev/application.yaml::StackName

  # The branches to monitor for changes.
  DMPHubBranchToMonitor: 'main'
  LambdaEnvironment: !stack_attr sceptre_user_data.env
